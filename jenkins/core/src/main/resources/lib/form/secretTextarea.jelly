<?jelly escape-by-default='true'?>
<!--
  ~ The MIT License
  ~
  ~ Copyright (c) 2019 CloudBees, Inc.
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in
  ~ all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  ~ THE SOFTWARE.
  -->

<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:f="/lib/form" xmlns:l="/lib/layout">
    <st:documentation><![CDATA[
Enhanced version of <f:textarea/> for editing multi-line secrets.

Example usage:
{noformat}
<j:jelly xmlns:j="jelly:core" xmlns:f="/lib/form">
    <f:entry title="Secret" field="secret">
        <f:secretTextarea/>
    </f:entry>
    <f:entry title="Secret 2">
        <f:secretTextarea field="secret2"/>
    </f:entry>
    <f:entry title="Another Secret">
        <f:secretTextarea name="foo" value="${it.foo}"/>
    </f:entry>
</j:jelly>
{noformat}
    ]]>
        <st:attribute name="field">
            Used for databinding. Must be compatible with hudson.util.Secret for round-trip ciphertext.
        </st:attribute>
        <st:attribute name="name">
            Name to use for form input name. Calculated from @field by default.
        </st:attribute>
        <st:attribute name="value">
            Value of the secret. Calculated from instance[@field] by default.
            This value must be of type hudson.util.Secret.
            The value will be encrypted when sent to the client if the client has Item.CONFIGURE permissions.
        </st:attribute>
        <st:attribute name="placeholder">
            Placeholder text for input field when displayed.
        </st:attribute>
    </st:documentation>

    <f:prepareDatabinding/>
    <j:set var="name" value="${attrs.name ?: '_.'+attrs.field}"/>
    <j:set var="value" value="${h.getPasswordValue(attrs.value ?: instance[attrs.field])}"/>
    <j:set var="addText" value="${%Add}"/>
    <j:set var="replaceText" value="${%Replace}"/>
    <j:set var="buttonText" value="${value == null ? addText : replaceText}"/>

    <st:adjunct includes="lib.form.secretTextarea.secret"/>
    <div class="secret" data-name="${name}" data-placeholder="${attrs.placeholder ?: ''}" data-prompt="${%EnterSecret}">
        <div class="secret-header">
            <div class="secret-legend">
                <j:choose>
                    <j:when test="${value == null}">
                        <span>${%NoStoredValue}</span>
                    </j:when>
                    <j:otherwise>
                        <l:icon src="symbol-lock-closed" class="icon-md"/>
                        <span>${%Concealed}</span>
                        <input type="hidden" name="${name}" value="${value}"/>
                    </j:otherwise>
                </j:choose>
            </div>
            <div class="secret-update">
                <button type="button" class="secret-update-btn jenkins-button jenkins-button--primary">${buttonText}</button>
            </div>
        </div>
    </div>

</j:jelly>
